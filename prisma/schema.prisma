// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trainings {
  id                String               @id @default(uuid())
  name              String               @unique
  exercises         Exercises[]
  athletes          Athletes[]
  TrainingExecution TrainingExecutions[]
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
}

model Exercises {
  id           String         @id @default(uuid())
  name         String
  sets_qtd     Int
  trainingId   String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Training     Trainings      @relation(fields: [trainingId], references: [id], onDelete: Cascade)
  ExerciseSets ExerciseSets[]
}

model Athletes {
  id           String         @id @default(uuid())
  name         String
  trainings    Trainings[]
  ExerciseSets ExerciseSets[]
}

model TrainingExecutions {
  id             String         @id @default(uuid())
  trainingId     String?
  exercises_sets ExerciseSets[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  Training       Trainings?     @relation(fields: [trainingId], references: [id], onDelete: Cascade)
}

model ExerciseSets {
  id                  String             @id @default(uuid())
  setNumber           Int
  reps                Decimal
  weight              Int
  athletesId          String
  exercisesId         String
  trainingExecutionId String
  athlete             Athletes           @relation(fields: [athletesId], references: [id], onDelete: Cascade)
  TrainingExecution   TrainingExecutions @relation(fields: [trainingExecutionId], references: [id], onDelete: Cascade)
  exercise            Exercises          @relation(fields: [exercisesId], references: [id], onDelete: Cascade)
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
}
